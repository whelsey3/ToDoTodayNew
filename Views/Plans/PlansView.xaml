<UserControl x:Class="Planner.PlansView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:e2c="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:local="clr-namespace:Planner"
        xmlns:spt="clr-namespace:Planner"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:support="clr-namespace:Planner.Support"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
             
        mc:Ignorable="d"
 FocusManager.FocusedElement="{Binding ElementName=tv}"            
        d:DesignHeight="500" d:DesignWidth="800">

    <!--DataContext="{Binding ViewModelName, Source={StaticResource Locator}}">-->

    <UserControl.Resources>

        <HierarchicalDataTemplate DataType="{x:Type local:dbFolderViewModel}" x:Name="theList"
                       ItemsSource="{Binding Children}"
                       >
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" Margin="3,0" Source="/Resources/folder.ico"/>
                <TextBlock Text="{Binding FolderName}" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type local:dbProjectViewModel}" 
                        ItemsSource="{Binding Children}"
                        >
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" Margin="3,0" Source="/Resources/P_reg.ico" />
                <TextBlock x:Name="tvItem" Text="{Binding  ProjectName}"  />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding cStatus}" Value="F">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource F}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="O">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource O}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="I">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource I}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="A">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource A}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="W">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource W}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                    <Setter TargetName="tvItem" Property="Foreground" Value="{StaticResource DarkDullBrush}" />
                </DataTrigger>
                <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}" Value="True">
                            <Setter TargetName="tvItem" Property="Foreground" Value="{StaticResource DarkDullBrush}"/>
                        </DataTrigger>-->

            </HierarchicalDataTemplate.Triggers>

        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type local:dbTaskViewModel}" 
          ItemsSource="{Binding Children}"
          >
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" Margin="3,0" Source="/Resources/T_reg.ico" />
                <TextBlock x:Name="tvItem" Text="{Binding TaskName}" />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding cStatus}" Value="F">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource F}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="O">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource O}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="I">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource I}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="A">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource A}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="W">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource W}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                    <Setter TargetName="tvItem" Property="Foreground" Value="{StaticResource DarkDullBrush}" />
                </DataTrigger>
                <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}" Value="True">
                            <Setter TargetName="tvItem" Property="Foreground" Value="{StaticResource DarkDullBrush}"/>
                        </DataTrigger>-->

            </HierarchicalDataTemplate.Triggers>

        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type local:dbSubTaskViewModel}">
            <StackPanel Orientation="Horizontal">
                <Image Width="16" Height="16" Margin="3,0" Source="/Resources/S_reg.ico" />
                <TextBlock x:Name="tvItem" Text="{Binding SubTaskName}" />
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding cStatus}" Value="F">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource F}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="O">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource O}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="I">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource I}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="A">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource A}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding cStatus}" Value="W">
                    <Setter TargetName="tvItem" Property="Background" Value="{StaticResource W}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="DragAdorner">
            <Border Background="Silver"
              BorderBrush="Gray"
              BorderThickness="1"
              CornerRadius="2"
              Margin="1">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/icon.png"
                 Width="16"
                 Margin="0,0,2,0"
                 VerticalAlignment="Center" />
                    <TextBlock Text="{Binding}"
                     Margin="0,0,2,0"
                     VerticalAlignment="Center" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <!--<Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="TreeViewItem.IsExpanded"
                 Value="True" />
        </Style>-->

    </UserControl.Resources>

    <UserControl.CommandBindings>
        <!-- bindings for context menu commands -->
        <CommandBinding Command="New"
                    Executed="AddNewOne" />

        <CommandBinding Command="local:PlansCommands.AddNewFolder"
                    CanExecute="EvaluateAddFolder"
                    Executed="AddFolder" />

        <CommandBinding Command="Replace"
                    CanExecute="EvaluateAddToDoTDT"
                    Executed="AddToDoTDT" />
        
        <CommandBinding Command="Delete"
                    CanExecute="EvaluateCanDelete"
                    Executed="DeleteOne" />

        <CommandBinding Command="local:PlansCommands.DeleteFolder"
                    CanExecute="EvaluateCanDeleteFolder"
                    Executed="DeleteFolder" />

    </UserControl.CommandBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">

            <ListView Name="CommandButtons" ItemsSource="{Binding Commands}" BorderBrush="Black" FontSize="12" FontWeight="Bold" 
                          ScrollViewer.CanContentScroll="False"
                          >
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding Send}" 
                                        BorderThickness="0" 
                                        Margin="0" Padding="0" 
                                        >
                            <Path Data="{Binding IconGeometry}" Stretch="Uniform" 
                                            Style="{StaticResource PathOpacityStyle}"
                                            Fill="{StaticResource MidDullBrush}" Width="32" Height="32"/>
                            <Button.ToolTip>
                                <TextBlock Text="{Binding CommandDisplay}"/>
                            </Button.ToolTip>
                        </Button>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <ListView Name="ViewButtons" ItemsSource="{Binding Views}" BorderBrush="Transparent" FontSize="12" FontWeight="Bold" 
                          ScrollViewer.CanContentScroll="False"
                          >
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding Navigate}" 
                                        BorderThickness="0" Height="32" Width="100" 
                                        Background="{StaticResource LightBrightGradientBrush}"
                                        Foreground="{StaticResource DarkDullBrush}" >
                            <TextBlock Text="{Binding ViewDisplay}" TextAlignment="Center" />
                        </Button>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Menu Name="MainReportMenu" KeyboardNavigation.TabNavigation="Cycle" Margin="20,0,0,0" 
                  FontSize="12" FontWeight="Bold" IsEnabled="True"
                  BorderThickness="0" Height="32" Width="100">
                <MenuItem Name="Menu0" Header="Reports" >
                    <MenuItem Name="Menu01" Header="Tracks"     Command="{Binding Reports[0].RunReport1}"  IsCheckable="True"/>
                    <MenuItem Name="Menu02" Header="Projects"   Command="{Binding Reports[0].RunReport2}"  IsCheckable="True"/>
                    <MenuItem Name="Menu03" Header="ToDos"      Command="{Binding Reports[0].RunReport3}"  IsCheckable="True"/>
                    <MenuItem Name="Menu04" Header="Sum Tracks" Command="{Binding Reports[0].RunReport4}"  IsCheckable="True"/>
                </MenuItem>
                <!--<MenuItem Header="2" Command="{Binding Test}"  IsCheckable="True"/>-->
                <!--<MenuItem Header="_Reports" HorizontalContentAlignment="Center" VerticalC rue"/>
                    <MenuItem Header="Report2" Command="{Binding Path=CloseCommand}" />
                    <MenuItem Header="Report3" Command="{Binding Path=CloseCommand}" />
                    <MenuItem Header="Report4" Command="{Binding Path=CloseCommand}" />
                    <MenuItem Header="Report5" Command="{Binding Path=CloseCommand}" />
                </MenuItem>-->
            </Menu>

        </StackPanel>

        <!--<TreeView Name="tv" ItemsSource="{Binding Folders}" SelectedItemChanged="tv_SelectedItemChanged" Grid.Row="1" FontSize="14">-->
        <TreeView Name="tv" ItemsSource="{Binding Folders}"  
                         PreviewMouseRightButtonDown="tv_PreviewMouseRightButtonDown"
                         SelectedItemChanged="tv_SelectedItemChanged"
                                   
                         Loaded="tv_Loaded"
                         
                         ContextMenu="{StaticResource CategoryMenu}"        
                          TreeViewItem.Selected="OnItemSelected"  
                          Grid.Row="1" FontSize="14" Grid.ColumnSpan="2"
                          Margin="0,20,0,0"
                         
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True"
                      dd:DragDrop.UseDefaultEffectDataTemplate="True"
                         dd:DragDrop.DragHandler="{Binding}"
                         dd:DragDrop.DropHandler="{Binding}"
                         
                         >

            <!--This Style binds a TreeViewItem to a TreeViewItemViewModel.-->
            <!--<TreeView.ItemContainerStyle>
            
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>-->

            <!--<TreeView.ItemTemplate></TreeView.ItemTemplate>-->
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <!--<support:Throbber x:Name="Throbber" Visibility="{Binding ThrobberVisible}" d:IsHidden="True"/>-->

        <TextBlock Text="{Binding ErrorMessage}"  HorizontalAlignment="Right" VerticalAlignment="Top"/>

        <ContentControl Name="DisplayDetail"  d:IsHidden="True" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" >
            <Grid Name="DetailGrid"  Background="AliceBlue" Margin="0 0 20 0"
                          >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="215" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--  ItemsControl will go in the ContentPresenter   -->
                <!--<ContentPresenter    Grid.Row="0" Grid.ColumnSpan="2"  Margin="0,12,45,35"/>

                <ScrollViewer  VerticalScrollBarVisibility="Auto" Margin="0,12,45,35" d:IsHidden="True">-->
                <!--<ItemsControl>-->

                <!--<StackPanel Name="Stacker" Orientation="Horizontal" >  Grid.Row="" Grid.Column="" -->
                <TextBlock Text="Planning Details"  Width="200" Grid.Row="0" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"  
                                          TextAlignment="Center"
                                          Margin="2,4,4,2"/>
                
                <TextBlock Text="{Binding dispDetailsVM.Selection}"  Grid.Row="1" Grid.Column="0"  
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold" 
                                          Grid.ColumnSpan="2" TextAlignment="Center"
                                          Margin="2,4,0,2"/>
                
                <TextBlock Text="Item:"  Width="200" Grid.Row="2" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2"/>
                <TextBox Width="200"  Text="{Binding dispDetailsVM.Item}"  Grid.Row="2" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <TextBlock Text="Detailed Desc.:"  Width="200" Grid.Row="3" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2"/>
                <TextBox Width="200"  Text="{Binding dispDetailsVM.DetailedDesc}"  Grid.Row="3" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" HorizontalScrollBarVisibility="Auto" TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <TextBlock Text="Status:"  Width="200" Grid.Row="4" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2" />
                <TextBlock Width="200"  Text="{Binding dispDetailsVM.Status}"  Grid.Row="4" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <TextBlock Text="Priority:"  Width="200" Grid.Row="5" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2"/>
                <TextBox Width="200"  Text="{Binding dispDetailsVM.Priority}"  Grid.Row="5" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <!--<TextBlock Text="Due Date:"  Width="200" Grid.Row="6" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2"/>
                <TextBox Width="200"  Text="{Binding dispDetailsVM.RevDueDate}"  Grid.Row="6" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>-->

                <TextBlock Text="Folder ID:"  Width="200" Grid.Row="7" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2" />
                <TextBox Width="200"  Text="{Binding dispDetailsVM.FolderID}"  Grid.Row="7" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <TextBlock Text="Reference:"  Width="200" Grid.Row="8" Grid.Column="0"
                                          HorizontalAlignment="Right"
                                          TextAlignment="Right"
                                          Margin="2,4,4,2" />
                <TextBox Width="200"  Text="{Binding dispDetailsVM.PPartNum}"  Grid.Row="8" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>

                <TextBlock Text="Status Colors:"  Width="200" Grid.Row="9" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                
              <TextBlock Text="Waiting - ' '"  Width="200" Grid.Row="10" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource B}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                <TextBlock Text="On ToDo List - 'O'"  Width="200" Grid.Row="11" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource O}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                <TextBlock Text="Routine Task - 'R'"  Width="200" Grid.Row="12" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource R}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                <TextBlock Text="Active - 'A'"  Width="200" Grid.Row="13" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource A}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                  <TextBlock Text="In Progress - 'I'"  Width="200" Grid.Row="14" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource I}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                <TextBlock Text="Partial Complete - 'W'"  Width="200" Grid.Row="15" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource W}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />
                <TextBlock Text="Complete - 'F'"  Width="200" Grid.Row="16" Grid.Column="1"
                                          HorizontalAlignment="Left" FontSize="14" FontWeight="Bold"
                                          Background="{StaticResource F}"
                                          TextAlignment="Center"
                                          Margin="2,4,4,2" />

                <!--<TextBox Width="200"  Text="{Binding dispDetailsVM.PPartNum}"  Grid.Row="8" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>-->



                <!--<TextBox Width="200"  Text="{Binding dispDetailsVM.DAction}"  Grid.Row="9" Grid.Column="1"  HorizontalAlignment="Right"
                                          TextAlignment="Left"
                                          Margin="2,4,0,2"/>-->
                <!--</StackPanel>-->


               
                        <!--<TextBox Width="300"  Text="- - - theItem - - -"  />-->
                        <!--</StackPanel>-->
                    <!--</ItemsControl>-->
                <!--</ScrollViewer>-->
          </Grid>
        </ContentControl>

        <!--<TextBlock Text="Item:  " HorizontalAlignment="Left"  Grid.Row="2" />
        <TextBox x:Name="theItem" Text="  theItem  " HorizontalAlignment="Right" Grid.Row="2" />-->

        <ContentControl Template="{StaticResource EditPopUp}" Name="ProjectEdit" d:IsHidden="True">

            <ScrollViewer  VerticalScrollBarVisibility="Auto" d:IsHidden="True">
                <ItemsControl d:IsHidden="True">
                    <TextBlock Text="{Binding TitlePopUp}"
                       Margin="10,10,10,10" HorizontalAlignment="Center" Height="30"
                       FontStyle="Normal" FontWeight="Bold" FontSize="16" TextAlignment="Center" d:IsHidden="True"/>

                    <spt:EditRow LabelFor="Item:" d:IsHidden="True">
                        <TextBox Text="{Binding EditPlan.TheEntity.Item, 
                            UpdateSourceTrigger=PropertyChanged,  
                            NotifyOnSourceUpdated=True,
                            NotifyOnValidationError=True,
                            Mode=TwoWay}"   />
                    </spt:EditRow>

                    <spt:EditRow LabelFor="Desc:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.DetailedDesc, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" 
                                 TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" HorizontalScrollBarVisibility="Auto">

                        </TextBox>
                    </spt:EditRow>

                    <spt:EditRow LabelFor="Status:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.Status, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <spt:EditRow LabelFor="Priority:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.Priority, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <spt:EditRow LabelFor="Due Date:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.DueDate, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <spt:EditRow LabelFor="Revised DueDate:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.RevDueDate, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <spt:EditRow LabelFor="StartDate:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.StartDate, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <!--<spt:EditRow LabelFor="PPartNum:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.PPartNum, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="PSortOrder:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.PSortOrder, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        TargetNullValue='',
                                        Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="RespPerson:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.RespPerson, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="Hide:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.Hide, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="DispLevel:" d:IsHidden="True" >
                        <TextBox 
                            x:Name="DispLevel"
                            Text="{Binding   Details.DispLevel, 
                            StringFormat={}{0:C0}, 
                            UpdateSourceTrigger=PropertyChanged,  
                            NotifyOnSourceUpdated=True,
                            NotifyOnValidationError=True,
                            Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <spt:EditRow LabelFor="Done Date:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.DoneDate, 
                                        UpdateSourceTrigger=PropertyChanged,  
                                        NotifyOnSourceUpdated=True,
                                        NotifyOnValidationError=True,
                                        Mode=TwoWay}" />
                    </spt:EditRow>

                    <!--<spt:EditRow LabelFor="TDTSortOrder:" >
                        <TextBox Text="{Binding EditPlan.TheEntity.TDTSortOrder, 
                                                    UpdateSourceTrigger=PropertyChanged, 
                                                    NotifyOnSourceUpdated=True,
                                                    NotifyOnValidationError=True,
                                                    Mode=TwoWay}" />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="ProjectID:" d:IsHidden="True" >
                        <TextBox Text="{Binding EditPlan.TheEntity.ProjectID, 
                                                    UpdateSourceTrigger=PropertyChanged, 
                                                    NotifyOnSourceUpdated=True,
                                                    NotifyOnValidationError=True,
                                                    Mode=TwoWay}"  />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="ToDoID:" >
                        <TextBox Text="{Binding EditPlan.TheEntity.ToDoID, 
                                UpdateSourceTrigger=PropertyChanged,  
                                NotifyOnSourceUpdated=True,
                                NotifyOnValidationError=True,
                                Mode=TwoWay}"  />
                    </spt:EditRow>-->

                    <!--<spt:EditRow LabelFor="TDTSortOrder:">
                        <TextBox Text="{Binding EditPlan.TheEntity.TDTSortOrder, 
                                                    UpdateSourceTrigger=PropertyChanged,
                                                    NotifyOnSourceUpdated=True,
                                                    NotifyOnValidationError=True,
                                                    Mode=TwoWay}"  />
                    </spt:EditRow>-->

                    -->
                    <!--<spt:EditRow LabelFor="Outstanding Amount:">
                        -->
                    <!-- Outstanding payments are calculated rather than entered -->
                    <!--
                        <TextBox Text="{Binding   Details.Outstanding, 
                                StringFormat={}{0:C0}}"  />
                    </spt:EditRow>-->
                </ItemsControl>
            </ScrollViewer>

        </ContentControl>


    </Grid>
</UserControl>
